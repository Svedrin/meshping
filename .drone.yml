---
kind: pipeline
name: tests

platform:
  arch: amd64
  os: linux

steps:
- name: meshping
  image: alpine:3.20
  environment:
    MESHPING_DATABASE_PATH: /tmp
    MESHPING_PING_TIMEOUT:  1
    MESHPING_PING_INTERVAL: 2
    MESHPING_PEERING_INTERVAL: 10
    MESHPING_PEERS: "pylint-and-test:31337"
  commands:
  - apk add --no-cache python3 python3-dev py3-pip musl-dev liboping-dev make gcc bash dumb-init py3-netifaces py3-pillow ttf-dejavu py3-pandas cython tzdata
  - pip3 install --break-system-packages -r requirements.txt
  - cd /drone/src/oping-py && python3 setup.py build && python3 setup.py install
  - cd /drone/src && dumb-init -- python3 src/meshping.py
  detach: true

- name: pylint-and-test
  image: alpine:3.20
  commands:
  - apk add --no-cache python3 py3-pip py3-netifaces py3-pillow bash py3-pandas
  - pip3 install --break-system-packages pylint
  - pip3 install --break-system-packages -r requirements.txt
  - pip3 install --break-system-packages -r features/requirements.txt
  - bash -c "while ! nc -z meshping 9922; do sleep 1; done"
  - pylint --fail-under 9 src/
  - python3 -m behave

---
kind: pipeline
name: linux-amd64-latest

platform:
  arch: amd64
  os: linux

steps:
- name: set "latest" tag
  image: alpine:3.20
  commands:
  - echo -n "latest-amd64" > .tags
  when:
    branch: master

- name: set "staging" tag
  image: alpine:3.20
  commands:
  - echo -n "staging-amd64" > .tags
  when:
    branch: staging

- name: build docker image
  image: plugins/docker
  settings:
    repo: svedrin/meshping
    username: svedrin
    password:
      from_secret: docker-registry-pw
    cache_from: "svedrin/meshping:latest-amd64"


trigger:
  branch:
  - master
  - staging
  event:
    exclude:
    - pull_request

depends_on:
- tests

---
kind: pipeline
name: linux-aarch64-latest

platform:
  arch: aarch64
  os: linux

steps:
- name: set "latest-aarch64" tag
  image: alpine:3.20
  commands:
  - echo -n "latest-aarch64" > .tags
  when:
    branch: master

- name: set "staging-aarch64" tag
  image: alpine:3.20
  commands:
  - echo -n "staging-amd64" > .tags
  when:
    branch: staging

- name: build docker image
  image: plugins/docker
  settings:
    repo: svedrin/meshping
    username: svedrin
    password:
      from_secret: docker-registry-pw
    cache_from: "svedrin/meshping:latest-aarch64"
    platforms: linux/aarch64

trigger:
  branch:
  - master
  - staging
  event:
    exclude:
    - pull_request

depends_on:
- tests

---
kind: pipeline
name: linux-armv7l-latest

platform:
  arch: arm
  os: linux

steps:
- name: set "latest" tag
  image: alpine:3.20
  commands:
  - echo -n "latest-armv7l" > .tags
  when:
    branch: master

- name: set "staging" tag
  image: alpine:3.20
  commands:
  - echo -n "staging-armv7l" > .tags
  when:
    branch: staging

- name: build docker image
  image: plugins/docker
  settings:
    repo: svedrin/meshping
    username: svedrin
    password:
      from_secret: docker-registry-pw
    cache_from: "svedrin/meshping:latest-armv7l"
    debug: true

trigger:
  branch:
  - master
  - staging
  event:
    exclude:
    - pull_request

depends_on:
- tests


---
kind: pipeline
type: docker
name: manifest-latest

steps:
- name: publish
  image: plugins/manifest:1.4
  settings:
    ignore_missing: true
    spec: docker-manifest-latest.tmpl
    username: svedrin
    password:
      from_secret: docker-registry-pw

trigger:
  branch:
  - master
  - staging
  event:
    exclude:
    - pull_request

depends_on:
- linux-amd64-latest
- linux-armv7l-latest
- linux-aarch64-latest



---
kind: pipeline
name: linux-amd64-tagged

platform:
  arch: amd64
  os: linux

steps:
- name: set version tag
  image: alpine:3.20
  commands:
  - echo -n "${DRONE_TAG}-amd64" > .tags

- name: build docker image
  image: plugins/docker
  settings:
    repo: svedrin/meshping
    username: svedrin
    password:
      from_secret: docker-registry-pw
    cache_from: "svedrin/meshping:latest-amd64"

trigger:
  event: tag

depends_on:
- tests

---
kind: pipeline
name: linux-armv7l-tagged

platform:
  arch: arm
  os: linux

steps:
- name: set version tag
  image: alpine:3.20
  commands:
  - echo -n "${DRONE_TAG}-armv7l" > .tags

- name: build docker image
  image: plugins/docker
  settings:
    repo: svedrin/meshping
    username: svedrin
    password:
      from_secret: docker-registry-pw
    cache_from: "svedrin/meshping:latest-armv7l"

trigger:
  event: tag

depends_on:
- tests


---
kind: pipeline
type: docker
name: manifest-tagged

steps:
- name: publish
  image: plugins/manifest:1.2
  settings:
    ignore_missing: true
    spec: docker-manifest-tagged.tmpl
    username: svedrin
    password:
      from_secret: docker-registry-pw

trigger:
  event: tag

depends_on:
- linux-amd64-tagged
- linux-armv7l-tagged
- linux-aarch64-tagged


---
kind: signature
hmac: fa9426322deb123bfa8d3ae9b3912ef45f19bcf949cd80c3196cee52cb3d225c

...
